Принцип работы:
Если FXMLLoader не может создать экземпляр класса, он обращается к билдер-фабрике 
(от интерфейса BuilderFactor), которая реализует метод getBuilder(), который возвращает
билдер класса (от интерфейса Builder), который реализует метод build(), который возвращает 
создаваемый объект.

FXMLLoader использует по умолчанию билдер-фабрику JavaFXBuilderFactory, которая
отвечает за создание всех fxml-объектов JavaFX.
Другую и единственно возможную для лоадера билдер-фабрику надо задавать через метод:
FXMLLoader::setBuilderFactory(BuilderFactory builderFactory).
Поэтому в встраиваемой билдер-фабрике надо обязательно предусмотреть возвращение
дефолтного билдера из JavaFXBuilderFactory в случае, если встраиваемый билдер не 
может создать запрашиваемый объект:

	public Builder<?> getBuilder(Class<?> type) {
		// Проверка запрашиваемого объекта на принадлежность классу
		if (type == Item.class) {
			return new ItemBuilder();
		}
        // Вернуть дефолтный билдер
		return fxFactory.getBuilder(type);
	}

FXMLLoader поддерживает два типа билдера:
    - если Builder реализует Map интерфейс, то его put() метод используется чтобы
      передать объектные свойства в Builder. Метод put(String key, Object value)
      должен принимать имя(key) и значение свойства(value)

    - если Builder не реализует Map интерфейс, то Builder должен содержать геттер
      и сеттер методы, основанные на JavaBeans соглашении, для всех свойств указанных
      при создании объекта в fxml-документе.
